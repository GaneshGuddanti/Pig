data loading


-- Load the cleaned dataset with 15 fields
data = LOAD '/home/gg7hz/Cleaned_data.tsv' 
       USING PigStorage('\t') 
       AS (marketplace:chararray, customer_id:chararray, review_id:chararray, product_id:chararray, 
           product_parent:chararray, product_title:chararray, product_category:chararray, star_rating:int, 
           helpful_votes:int, total_votes:int, vine:chararray, verified_purchase:chararray, 
           review_headline:chararray, review_body:chararray, review_date:chararray);

1.a. -- Group data by marketplace and product_category
grouped_data = GROUP data BY (marketplace, product_category);

-- Calculate the total number of review_id and average star_rating
result_1 = FOREACH grouped_data GENERATE 
            FLATTEN(group) AS (marketplace, product_category),
            COUNT(data.review_id) AS total_reviews,
            AVG(data.star_rating) AS avg_star_rating;

-- Dump the result for Task 1.1
DUMP result_1;

1.b. -- Filter out records where marketplace is 'US'
filtered_result = FILTER result_1 BY marketplace != 'US';

-- Dump the result for Task 1.2
DUMP filtered_result;

2.a-- Group data by review_date
grouped_data = GROUP data BY review_date;

-- Calculate the total number of review_id
result_1 = FOREACH grouped_data GENERATE 
            FLATTEN(group) AS review_date,
            COUNT(data.review_id) AS total_reviews;

-- Dump the result
DUMP result_1;

2.
b.-- Group data by product_id
grouped_data = GROUP data BY product_id;

-- Calculate the average helpful_votes and total_votes
result_1 = FOREACH grouped_data GENERATE 
            FLATTEN(group) AS product_id,
            AVG(data.helpful_votes) AS avg_helpful_votes,
            AVG(data.total_votes) AS avg_total_votes;

-- Dump the result
DUMP result_1;

-- Order results by avg_total_votes in descending order
ordered_result = ORDER result_1 BY avg_total_votes DESC;

-- Limit to top 10 results
top_10_result = LIMIT ordered_result 10;

-- Dump the result
DUMP top_10_result;
